@model Nhom3.Core.Domains.TaiKhoan

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";

}

<div class="row bg-primary">
    <div class="col-lg-12">
        <h1 class="page-header" style="text-align:left;">Cập nhật thông tin tài khoản</h1>
    </div>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal ">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-12">
                @Html.LabelFor(model => model.TenTaiKhoan, htmlAttributes: new { @class = "control-label ", @style = "float:left;" })

                @Html.EditorFor(model => model.TenTaiKhoan, new { htmlAttributes = new { @class = "form-control ",@disabled="disabled" } })
                @Html.ValidationMessageFor(model => model.TenTaiKhoan, "", new { @class = "text-danger" })
            </div>
        </div>
        <input value="@Model.TenTaiKhoan" name="TenTaiKhoan" hidden/>

        <div class="form-group">
            <div class="col-md-12">
                @Html.LabelFor(model => model.MatKhau, htmlAttributes: new { @class = "control-label", @style = "float:left;" })

                @Html.EditorFor(model => model.MatKhau, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MatKhau, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-12">
                @Html.LabelFor(model => model.TinhTrang, htmlAttributes: new { @class = "control-label", @style = "float:left;" })

                <div class="checkbox">
                    <label class="switch">
                        <input type="checkbox" name="TinhTrang" checked value="true" />
                        <span class="slider round"></span>
                    </label>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                @Html.LabelFor(model => model.TenKhachHang, htmlAttributes: new { @class = "control-label", @style = "float:left;" })

                @Html.EditorFor(model => model.TenKhachHang, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TenKhachHang, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label", @style = "float:left;" })

                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                @Html.LabelFor(model => model.DiaChi, htmlAttributes: new { @class = "control-label", @style = "float:left;" })

                @Html.EditorFor(model => model.DiaChi, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DiaChi, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">

            <div class="col-md-12">
                @Html.LabelFor(model => model.SoDienThoai, htmlAttributes: new { @class = "control-label", @style = "float:left;" })
                @Html.EditorFor(model => model.SoDienThoai, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SoDienThoai, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-12">
                @Html.LabelFor(model => model.Quyen, htmlAttributes: new { @class = "control-label", @style = "float:left;" })

                <select class="form-control" name="Quyen">
                    <option value="0">Quản trị viên</option>
                    <option value="1">Khách hàng</option>
                </select>
                @Html.ValidationMessageFor(model => model.Quyen, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-12">
            <div class="col-md-12">
                <input type="submit" value="Sửa" class="btn btn-sm btn-primary normal-text" />
                @Html.ActionLink("Hủy", "Index", null, new { @class = "btn btn-sm btn-danger normal-text" })
            </div>

        </div>
    </div>

}


@if (ViewBag.duplicate == "no")
{

    <div class="col-md-12">
        <div class="alert alert-danger">@ViewBag.Error</div>
    </div>
}
<style>
    .switch {
        position: relative;
        display: inline-block;
        width: 60px;
        height: 34px;
    }

        .switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }

    .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        -webkit-transition: .4s;
        transition: .4s;
    }

        .slider:before {
            position: absolute;
            content: "";
            height: 26px;
            width: 26px;
            left: 4px;
            bottom: 4px;
            background-color: white;
            -webkit-transition: .4s;
            transition: .4s;
        }

    input:checked + .slider {
        background-color: #2196F3;
    }

    input:focus + .slider {
        box-shadow: 0 0 1px #2196F3;
    }

    input:checked + .slider:before {
        -webkit-transform: translateX(26px);
        -ms-transform: translateX(26px);
        transform: translateX(26px);
    }

    /* Rounded sliders */
    .slider.round {
        border-radius: 34px;
    }

        .slider.round:before {
            border-radius: 50%;
        }
</style>